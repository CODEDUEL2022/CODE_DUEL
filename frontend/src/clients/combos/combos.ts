/**
 * Generated by orval v6.25.0 🍺
 * Do not edit manually.
 * CODE_DUEL API
 * CODE_DUELのAPI仕様書です。
 * OpenAPI spec version: 1.0
 */
import axios from 'axios'
import type {
  AxiosError,
  AxiosRequestConfig,
  AxiosResponse
} from 'axios'
import useSwr from 'swr'
import type {
  Key,
  SWRConfiguration
} from 'swr'
import type {
  Combo,
  GetComboParams
} from '../index.schemas'


  
  /**
 * コンボを取得する
 * @summary コンボを取得する
 */
export const getCombo = (
    params: GetComboParams, options?: AxiosRequestConfig
 ): Promise<AxiosResponse<Combo[]>> => {
    return axios.get(
      `/combo`,{
    ...options,
        params: {...params, ...options?.params},}
    );
  }



export const getGetComboKey = (params: GetComboParams,) => [`/combo`, ...(params ? [params]: [])] as const;


export type GetComboQueryResult = NonNullable<Awaited<ReturnType<typeof getCombo>>>
export type GetComboQueryError = AxiosError<unknown>

/**
 * @summary コンボを取得する
 */
export const useGetCombo = <TError = AxiosError<unknown>>(
  params: GetComboParams, options?: { swr?:SWRConfiguration<Awaited<ReturnType<typeof getCombo>>, TError> & { swrKey?: Key, enabled?: boolean }, axios?: AxiosRequestConfig }
) => {
  const {swr: swrOptions, axios: axiosOptions} = options ?? {}

  const isEnabled = swrOptions?.enabled !== false
  const swrKey = swrOptions?.swrKey ?? (() => isEnabled ? getGetComboKey(params) : null);
  const swrFn = () => getCombo(params, axiosOptions);

  const query = useSwr<Awaited<ReturnType<typeof swrFn>>, TError>(swrKey, swrFn, {
    
    ...swrOptions
  })

  return {
    swrKey,
    ...query
  }
}
